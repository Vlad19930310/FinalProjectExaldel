stages:
  - sonar-scan
  - build
  - test
  - deploy
  - healthcheck
  - roll-back
  - deploy-prod
  - healthcheck-prod
  - roll-back-prod
  
variables:
  PACKAGE_NAME: "awesome-django-app"
  DATABASE_NAMESPACE: "postgres-app"

sonar-scan-merge:
  stage: sonar-scan  
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' 
  script:
    - sonar-scanner
  allow_failure: true

build-wagtail-check:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' 
  script:
    - >-
      /kaniko/executor
      --context "application/mysite"
      --dockerfile "application/mysite/Dockerfile"
      --no-push 
      
sonar-scan-dev:
  stage: sonar-scan  
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH         
  script:
    - sonar-scanner
  allow_failure: true

build-wagtail-dev:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        IMAGE_TAG: "$CI_COMMIT_SHORT_SHA-dev"      
  script: 
    - >-
      /kaniko/executor
      --context "application/mysite"
      --dockerfile "application/mysite/Dockerfile"
      --destination "gcr.io/internship87task8/wagtail:$IMAGE_TAG"

build-backup:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - >-
      /kaniko/executor
      --context "backup"
      --dockerfile "backup/Dockerfile"
      --destination "gcr.io/internship87task8/backup:$BACKUP_IMAGE_TAG"
  rules:
  - changes:
    -  backup/**/*
    - .gitlab-ci.yml
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    variables:
      BACKUP_IMAGE_TAG: "$CI_MERGE_REQUEST_ID"
  - if: $CI_COMMIT_TAG
    variables:
      BACKUP_IMAGE_TAG: $CI_COMMIT_TAG
    when: always

lint-backup:
  stage: test
  image: alpine/helm:3.9.1
  script:
    - cd helmcharts
    - helm lint backup
    - helm upgrade --install backup backup -n "$DATABASE_NAMESPACE" --set image.name="gcr.io/internship87task8/backup:$BACKUP_IMAGE_TAG" --dry-run
  rules:
    - changes:
        - helmcharts/backup/**/*
        - .gitlab-ci.yml
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      variables:
        BACKUP_IMAGE_TAG: "$CI_MERGE_REQUEST_ID"
    - if: $CI_COMMIT_TAG
      variables:
        BACKUP_IMAGE_TAG: $CI_COMMIT_TAG
      when: always

deploy-dev:
  stage: deploy
  image: alpine/helm:3.9.1  
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        IMAGE_TAG: "$CI_COMMIT_SHORT_SHA-dev" 
  script:
    - cd helmcharts
    - helm upgrade --install app-dev app-helmChart --set containers.app.image=gcr.io/internship87task8/wagtail:$IMAGE_TAG --set ingress.app.host=dev.prtest.tech -n dev    

health-wagtail-dev:
  stage: healthcheck
  image: wbitt/network-multitool
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        HEALTH_CHECK: $CI_JOB_STATUS
  script:
    - nslookup dev.prtest.tech 
    - curl https://dev.prtest.tech   

roll-back-dev:
  stage: roll-back
  image: alpine/helm:3.9.1   
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       
  script:
    - cd helmcharts
    - helm rollback app-dev -n dev
  when: on_failure
      
sonar-scan-stage:
  stage: sonar-scan  
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  rules:    
    - if: $CI_COMMIT_TAG             
  script:
    - sonar-scanner
  allow_failure: true
  

build-wagtail-stage:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:    
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_TAG: $CI_COMMIT_TAG   
  script:
    - >-
      /kaniko/executor
      --context "application/mysite"
      --dockerfile "application/mysite/Dockerfile"
      --destination "gcr.io/internship87task8/wagtail:$IMAGE_TAG"    

deploy-stage:
  stage: deploy
  image: alpine/helm:3.9.1
  rules:    
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_TAG: $CI_COMMIT_TAG 
  script:
    - cd helmcharts
    - helm upgrade --install app-stage app-helmChart --set containers.app.image=gcr.io/internship87task8/wagtail:$IMAGE_TAG --set ingress.app.host=stage.prtest.tech -n stage    

deploy-backup:
  stage: deploy
  image: alpine/helm:3.9.1
  script:
    - cd helmcharts
    - helm upgrade --install backup backup -n "$DATABASE_NAMESPACE" --set image.name="gcr.io/internship87task8/backup:$BACKUP_IMAGE_TAG"
   rules:
    - if: $CI_COMMIT_TAG
      variables:
        BACKUP_IMAGE_TAG: $CI_COMMIT_TAG

health-wagtail-stage:
  stage: healthcheck
  image: wbitt/network-multitool
  rules:    
    - if: $CI_COMMIT_TAG 
  script:
    - nslookup stage.prtest.tech
    - curl https://stage.prtest.tech

roll-back-stage:
  stage: roll-back
  image: alpine/helm:3.9.1   
  rules:
    - if: $CI_COMMIT_TAG       
  script:
    - cd helmcharts
    - helm rollback app-stage -n stage
  when: on_failure    
    
deploy-production:
  stage: deploy-prod  
  image: alpine/helm:3.9.1
  rules:    
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_TAG: $CI_COMMIT_TAG 
  script:
    - cd helmcharts
    - helm upgrade --install app-prod app-helmChart --set containers.app.image=gcr.io/internship87task8/wagtail:$IMAGE_TAG --set ingress.app.host=prtest.tech -n prod       
  when: manual

health-wagtail-prod:
  stage: healthcheck-prod
  image: wbitt/network-multitool
  rules:    
    - if: $CI_COMMIT_TAG
  script:
    - nslookup bug.prtest.tech
    - curl https://prtest.tech
  when: on_success  

roll-back-prod:
  stage: roll-back-prod
  image: alpine/helm:3.9.1   
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cd helmcharts
    - helm rollback app-prod -n prod
  when: on_failure    


