---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
      - name: {{ .Values.app.name }}-app
        image: {{ .Values.containers.app_image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.app.containerPort }}
        env:
        - name: "SONARQUBE_JDBC_USERNAME"
          valueFrom:
            secretKeyRef:
               name: {{ .Values.db.secretname }}
               key: POSTGRESQL_USERNAME
        - name: "SONARQUBE_JDBC_PASSWORD"
          valueFrom:
            secretKeyRef:
               name: {{ .Values.db.secretname }}
               key: POSTGRESQL_PASSWORD
        - name: "SONARQUBE_JDBC_URL"
          valueFrom:
            secretKeyRef:
               name: {{ .Values.db.secretname }}
               key: SONARQUBE_JDBC_URL
        volumeMounts:
        - name: app-pvc
          mountPath: "/opt/sonarqube/data/"
          subPath: data
        - name: app-pvc
          mountPath: "/opt/sonarqube/extensions/"
          subPath: extensions
        - name: app-pvc
          mountPath: "/opt/sonarqube/logs"
          subPath: logs
      volumes:
      - name: app-pvc
        persistentVolumeClaim:
          claimName: {{ .Values.app.volume.name }}