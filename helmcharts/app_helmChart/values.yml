namespace: wagtail

app:
  project : internship87task8
  apiVersion : apps/v1
  kind: Deployment
  metadata:
    name: web-deployment-autoscaling
    labels:
      app : k8s-deployment      
      spec:
        containers:
          - name : app-wagtail
            image: gcr.io/internship87task8/wagtail:latest
            ports:
              - containerPort: 8000


hpa:
  apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    name: autoscaling
  spec:
    scaleTargetRef:
      apiVersion: apps/v2beta2
      kind: Deployment
      name: web-deployment-autoscaling
    minReplicas: 2
    maxReplicas: 6
    metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 70
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80


ingress:
  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: main-ingress
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
  spec:
    tls:
    - hosts:
      - wagtail.prtest.tech
      - sonar.prtest.tech   
      
      secretName: app-tls
    rules:

    - host: sonar.prtest.tech
      http:
          paths:
            - pathType: Prefix
              path: /
              backend:
                service:
                  name: sonarqube
                  port: 
                    number: 9000   

    - host: wagtail.prtest.tech
      http:
          paths:
            - pathType: Prefix
              path: /
              backend:
                service:
                  name: autoscaling-pod-service
                  port: 
                    number: 8000


service:
  apiVersion: v1
  kind: Service
  metadata:
    name: autoscaling-pod-service
    labels:
      env  : prod  
    ports:
      - name      : app-listener
        protocol  : TCP
        port      : 80  # Port on Load Balancer
        targetPort: 8000  # Port on Pod
    type: ClusterIP


ClusterIssuer:
  apiVersion: cert-manager.io/v1
  kind: ClusterIssuer
  metadata:
    name: letsencrypt-prod
  spec:
    acme:
      # You must replace this email address with your own.
      # Let's Encrypt will use this to contact you about expiring
      # certificates, and issues related to your account.
      email: yury.market.ma@gmail.com
      server: https://acme-v02.api.letsencrypt.org/directory
      privateKeySecretRef:
        # Secret resource that will be used to store the ACME account's private key.
        name: letsencrypt-prod-private-key
      # Add a single challenge solver, HTTP01 using nginx
      solvers:
      - http01:
          ingress:
            class: nginx

containers:


